from addressbook import AddressBook, save_data, load_data
from utils import print_menu, get_input, validate_name, validate_phone, validate_birthday

def interactive_menu():
    print_menu()

def main():
    addressbook = load_data("addressbook.pkl")

    while True:
        interactive_menu()
        choice = get_input("╔════════════════════════════════╗\n║ Введіть ваш вибір:             ║\n╚════════════════════════════════╝\n")

        if choice == '1':
            name = get_input("\n╔════════════════════════════════╗\n║ Введіть ім'я (Наприклад: Петро): ║\n╚════════════════════════════════╝\n")
            while not validate_name(name):
                retry = get_input("\n╔════════════════════════════════════════╗\n"
                                  "║ Невірне ім'я. Повторити? (так/ні):      ║\n"
                                  "╚════════════════════════════════════════╝\n")
                if retry.lower() == 'ні':
                    break
                name = get_input("\n╔════════════════════════════════╗\n║ Введіть ім'я (Наприклад: Петро): ║\n╚════════════════════════════════╝\n")
            else:
                phone = get_input("\n╔════════════════════════════════════════╗\n║ Введіть телефон (10 цифр):               ║\n╚════════════════════════════════════════╝\n")
                while not validate_phone(phone):
                    retry = get_input("\n╔════════════════════════════════════════╗\n"
                                      "║ Невірний телефон. Повторити? (так/ні):  ║\n"
                                      "╚════════════════════════════════════════╝\n")
                    if retry.lower() == 'ні':
                        break
                    phone = get_input("\n╔════════════════════════════════════════╗\n║ Введіть телефон (10 цифр):               ║\n╚════════════════════════════════════════╝\n")

                birthday = get_input("\n╔════════════════════════════════════════════════╗\n║ Введіть дату народження (дд.мм.рррр):           ║\n"
                                     "║ Наприклад: 15.04.1985                            ║\n╚════════════════════════════════════════════════╝\n")
                while not validate_birthday(birthday):
                    retry = get_input("\n╔════════════════════════════════════════╗\n"
                                      "║ Невірна дата народження. Повторити?     ║\n"
                                      "║ (так/ні):                               ║\n╚════════════════════════════════════════╝\n")
                    if retry.lower() == 'ні':
                        break
                    birthday = get_input("\n╔════════════════════════════════════════════════╗\n║ Введіть дату народження (дд.мм.рррр):           ║\n"
                                         "║ Наприклад: 15.04.1985                            ║\n╚════════════════════════════════════════════════╝\n")
                
                if validate_name(name) and validate_phone(phone) and validate_birthday(birthday):
                    record = f"{name}, {phone}, {birthday}"
                    addressbook.add_record(record)
                    print("\n╔════════════════════════════════╗\n║ Запис додано успішно!          ║\n╚════════════════════════════════╝\n")
        elif choice == '2':
            print("\n╔════════════════════════════════╗\n║ Показую всі записи:            ║\n╚════════════════════════════════╝\n")
            addressbook.show_records()
            print("\n")
        elif choice == '3':
            search_term = get_input("\n╔══════════════════════════════════════════════╗\n"
                                    "║ Введіть ім'я для пошуку                       ║\n"
                                    "║ Приклад: Петро                               ║\n"
                                    "╚══════════════════════════════════════════════╝\n")
            addressbook.find_record(search_term)
        elif choice == '4':
            record_to_delete = get_input("\n╔══════════════════════════════════════════════╗\n"
                                         "║ Введіть ім'я для видалення                    ║\n"
                                         "║ Приклад: Петро                               ║\n"
                                         "╚══════════════════════════════════════════════╝\n")
            addressbook.delete_record(record_to_delete)
        elif choice == '5':
            record_to_update = get_input("\n╔══════════════════════════════════════════════╗\n"
                                         "║ Введіть ім'я для оновлення                    ║\n"
                                         "║ Приклад: Петро                               ║\n"
                                         "╚══════════════════════════════════════════════╝\n")
            addressbook.update_record(record_to_update)
        elif choice == '6':
            print("\n╔════════════════════════════════╗\n║ Найближчі дні народження:      ║\n╚════════════════════════════════╝\n")
            addressbook.show_upcoming_birthdays()
        elif choice == '7':
            save_data(addressbook, "addressbook.pkl")
            print("\n╔════════════════════════════════╗\n║ Адресна книга збережена.       ║\n╚════════════════════════════════╝\n")
        elif choice == '8':
            save_data(addressbook, "addressbook.pkl")
            print("\n╔════════════════════════════════╗\n║ Вихід з програми.              ║\n╚════════════════════════════════╝\n")
            break
        else:
            print("\n╔════════════════════════════════╗\n║ Неправильна опція.             ║\n║ Будь ласка, виберіть знову.    ║\н╚════════════════════════════════╝\n")

if __name__ == "__main__":
    main()
